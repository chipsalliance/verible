name: verible-ci

on:
  push:
  pull_request:

jobs:
  VerifyFormatting:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run:
          sudo apt-get install clang-format
          clang-format --version

      - name: Run formatting style check
        run: ./.github/workflows/run-clang-format.sh

   Check:
      runs-on: ubuntu-16.04
      strategy:
        fail-fast: false
        matrix:
          env:
            - MODE: test
            - MODE: compile
            - MODE: clean
      env: ${{ matrix.env}}
      name: Check Â· ${{ matrix.env.MODE}}

      steps:
        - name: Checkout code
          uses: actions/checkout@v2
          with:
           # Download complete repository + tags
           fetch-depth: 0

        - name: Mount bazel cache
          uses: actions/cache@v1
          if: ${{ env.MODE != 'clean' }}
          with:
            path: "/home/runner/.cache/bazel"
            key: bazel-${{ env.MODE }}

        - name: Install Dependencies
          run: ./.github/workflows/install.sh

        - name: ${{ matrix.env.mode }} Verible
          run: ./.github/workflows/script.sh

        - name: After success
          if: ${{ success() }}
          run: ./.github/workflows/success.sh

        - name: Deployment
          if: ${{ github.ref == 'refs/heads/master' && github.event_name != 'pull_request' && matrix.env.MODE == 'compile' && success() }}
          uses: JamesIves/github-pages-deploy-action@3.7.1
          with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            BRANCH: gh-pages
            FOLDER: /tmp/pages
            CLEAN: true

   Kythe:
      runs-on: ubuntu-20.04

      steps:
        - name: Checkout code
          uses: actions/checkout@v2
          with:
           # Download complete repository + tags
           fetch-depth: 0

        - name: Mount bazel cache
          uses: actions/cache@v1
          with:
            path: "/home/runner/.cache/bazel"
            key: bazel-kythe

        - name: Setting compiler
          run: |
            source ./.github/settings.sh
            ./.github/workflows/set-compiler.sh 9

        - name: Install Bazel
          run: |
            source ./.github/settings.sh
            ./.github/workflows/install-bazel.sh

        - name: Install Kythe
          run: |
            source ./.github/settings.sh
            ./.github/workflows/install-kythe.sh

        - name: Run Kythe
          run: |
            source ./.github/settings.sh
            ./.github/workflows/run-kythe.sh

        - name: Upload Kythe output
          uses: actions/upload-artifact@v2
          with:
            name: verible-kythe-index
            path: kythe_output/*.kzip

   Matrix:
      runs-on: ubuntu-latest
      outputs:
        matrix: ${{ steps.generate.outputs.matrix }}
      steps:
      - uses: actions/checkout@v2
      - id: generate
        run: ./.github/workflows/generate_matrix.sh


   Release:
      runs-on: ubuntu-20.04
      needs: Matrix
      strategy:
        fail-fast: false
        matrix:
          include: ${{ fromJson(needs.Matrix.outputs.matrix) }}
      name: ${{ matrix.OS }} ${{ matrix.OS_VERSION }}
      env:
        MODE: bin
        OS: ${{ matrix.OS }}
        OS_VERSION: ${{ matrix.OS_VERSION }}
      steps:

        - name: Checkout code
          uses: actions/checkout@v2
          with:
           # Download complete repository + tags
           fetch-depth: 0

        - name: Before Install
          run:
            ./.github/workflows/install.sh

        - name: Main script
          run: ./.github/workflows/script.sh

        - name: Upload binary
          uses: actions/upload-artifact@v2
          with:
            name: verible-binary-${{ matrix.OS }}-${{ matrix.OS_VERSION }}
            path: /tmp/releases/verible-*.tar.gz

        - name: After success
          id: after_success
          if: ${{ success() }}
          run: ./.github/workflows/success.sh

        - name: Deployment
          if: ${{ github.ref == 'refs/heads/master' && github.event_name != 'pull_request' && success() }}
          uses: svenstaro/upload-release-action@v2
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            file: /tmp/releases/verible-*.tar.gz
            tag: ${{ env.TAG }}
            overwrite: true
            file_glob: true
