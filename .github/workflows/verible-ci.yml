name: verible-ci

on:
  push:
    branches:
    - master
    - main
  pull_request:
    branches:
    - master
    - main

env:
  DOCKER_BUILDKIT: 1
  BOT_USER: "Deployment Bot"
  BOT_EMAIL: "verible-dev@googlegroups.com"

jobs:


  VerifyFormatting:
    runs-on: ubuntu-20.04

    steps:

    - name: Cancel previous
      uses: styfle/cancel-workflow-action@0.8.0
      with:
        access_token: ${{ github.token }}

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install Dependencies
      run: |
        sudo apt-get install clang-format
        clang-format --version

    - name: Run formatting style check
      run: ./.github/workflows/run-clang-format.sh


  Check:
    runs-on: ubuntu-16.04
    strategy:
      fail-fast: false
      matrix:
        mode:
        - test
        - compile
        - clean
    env:
      MODE: ${{ matrix.mode }}
    name: Check Â· ${{ matrix.mode }}

    steps:
    
    - name: Cancel previous
      uses: styfle/cancel-workflow-action@0.8.0
      with:
        access_token: ${{ github.token }}

    - name: Checkout code
      uses: actions/checkout@v2
      with:
       # Download complete repository + tags
       fetch-depth: 0

    - name: Mount bazel cache
      uses: actions/cache@v1
      if: matrix.mode != 'clean'
      with:
        path: "/home/runner/.cache/bazel"
        key: bazel-${{ matrix.mode }}

    - name: Install Dependencies
      run: |
        set -x
        source ./.github/settings.sh
        ./.github/workflows/set-compiler.sh 9
        ./.github/workflows/install-bazel.sh
        ./.github/workflows/install-python.sh

    - name: ${{ matrix.env.mode }} Verible
      run: ./.github/workflows/script.sh

    - name: Set up things for GitHub Pages deployment
      if: matrix.mode == 'compile'
      run: ./.github/workflows/github-pages-setup.sh

    - name: Deployment
      if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request' && matrix.mode == 'compile'
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: /tmp/pages
        CLEAN: true


  Kythe:
    runs-on: ubuntu-20.04

    steps:

    - name: Checkout code
      uses: actions/checkout@v2
      with:
       # Download complete repository + tags
       fetch-depth: 0

    - name: Mount bazel cache
      uses: actions/cache@v1
      with:
        path: "/home/runner/.cache/bazel"
        key: bazel-kythe

    - name: Setting compiler
      run: |
        source ./.github/settings.sh
        ./.github/workflows/set-compiler.sh 9

    - name: Install Bazel
      run: |
        source ./.github/settings.sh
        ./.github/workflows/install-bazel.sh

    - name: Install Kythe
      run: |
        source ./.github/settings.sh
        ./.github/workflows/install-kythe.sh

    - name: Run Kythe
      run: |
        source ./.github/settings.sh
        ./.github/workflows/run-kythe.sh

    - name: ðŸ“¤ Upload Kythe output
      uses: actions/upload-artifact@v2
      with:
        path: kythe_output/*.kzip


  Matrix:
    runs-on: ubuntu-latest
    name: Generate Build matrix
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}

    steps:

    - uses: actions/checkout@v2

    - id: generate
      run: ./.github/workflows/generate-matrix.py


  Build:
    needs: Matrix
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.Matrix.outputs.matrix) }}
    env:
      MATRIX_OS: '${{ matrix.os }}:${{ matrix.ver }}'
    name: 'Build Â· ${{ matrix.os }}:${{ matrix.ver }}'

    steps:

    - uses: actions/checkout@v2
      with:
       # Download complete repository + tags
       fetch-depth: 0

    - run: docker pull $MATRIX_OS

    - name: Main script
      run: |
        set -x
        source ./.github/settings.sh
        ./releasing/docker-run.sh $MATRIX_OS

    - name: ðŸ“¤ Upload artifact
      uses: actions/upload-artifact@v2
      with:
        path: releasing/out/verible-*.tar.gz


  Release:
    needs: [ Check, Build ]
    runs-on: ubuntu-20.04
    name: ðŸ“¦ Release
    if: ${{github.ref == 'refs/heads/main' || github.ref == 'refs/head/master'}}

    steps:

    - uses: actions/checkout@v2
      with:
       # Download complete repository + tags
       fetch-depth: 0

    - name: ðŸ“¥ Download artifacts
      uses: actions/download-artifact@v2

    - name: Generate and apply TAG
      run: |
        git config --local user.name "$BOT_USER"
        git config --local user.email "$BOT_EMAIL"

        # Create a tag of form v0.0-183-gdf2b162-20191112132344
        TAG="${TAG:-$(git describe --match=v*)}"

        git tag "$TAG" || true
        echo "TAG=$TAG" >> $GITHUB_ENV

        ls -lah artifact

    - name: Deploy release and assets
      if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: artifact/verible-*.tar.gz
        tag: ${{ env.TAG }}
        overwrite: true
        file_glob: true
